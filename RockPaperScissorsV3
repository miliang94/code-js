<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <title>Rock Paper Scissors</title>
  </head>
  <body>
    <p>Rock Paper Scissors</p>
    <!--Rock button-->
    <button onclick="playGame('Rock')">Rock</button>
    <!--Paper button-->
    <button onclick="playGame('Paper')">Paper</button>
    <!--Scissors button-->
    <button onclick="playGame('Scissors')">Scissors</button>
    <button onclick="
      score.wins = 0;
      score.losses = 0;
      score.ties = 0;
      localStorage.removeItem('score');
    ">Reset Score</button>
    <script>
      /*
      Algorithm for Rock Paper Scissors game.
      When user selects a move:
      1. Computer randomly chooses a move
      2. Compare the moves to get result
      3. Update score
      4. Display the result in a pop-up message
      */

      /*
      Need somewhere to save score, make it equal to an object. Declare them outside the function in order to save the score from previous games.
      Otherwise the function will create a new score every time.
      */
      /*
      const score = {
        wins: 0,
        losses: 0,
        ties: 0
      };
      */

      //Get string out of local storage - loads scored saved from last time before browser is refreshed as a JSON string
      //Convert back to object
      //Use score from local storage instead of resetting to 0 every time browser is refreshed
      let score = JSON.parse(localStorage.getItem('score')) //gets score if truthy
      //Using a default operator, the code below is a shortcut to setting default score
      || { //sets default score to 0 if former default operator code is falsy
        wins: 0,
        losses: 0,
        ties: 0
      };

      //Longer way to set default score
      //Set default value if score does not exist using a default operator
      /*
      if (!score) { //!score does same thing as checking if it's null (i.e. score === null), difference is it's a shortcut. !score flips it to true
        score = { //give default score, make equal to default object. will return false if a score exists
          wins: 0,
          losses: 0,
          ties: 0
        };
      } //end if
      */

      //User selects a move
      function playGame(playerMove) {
        const computerMove = pickComputerMove();

        let result = '';

        //2. Compare the moves to get result
        if (playerMove === 'Rock') {
          if (computerMove === 'Rock') {
            result = 'Tie';
          } else if (computerMove === 'Paper') {
            result = 'You lose';
          } else if (computerMove === 'Scissors') {
            result = 'You win';
          }
        }

        else if (playerMove === 'Paper') {
          if (computerMove === 'Rock') {
            result = 'You win';
          } else if (computerMove === 'Paper') {
            result = 'Tie';
          } else if (computerMove === 'Scissors') {
            result = 'You lose';
          }
        }

        else if (playerMove === 'Scissors') {
          if (computerMove === 'Rock') {
            result = 'You lose';
          } else if (computerMove === 'Paper') {
            result = 'You win';
          } else if (computerMove === 'Scissors') {
            result = 'Tie';
          }
        }

        /*
        3. Update score
        Create if statement for adding results to score
        */
        if (result === 'You win') {
          score.wins += 1; //shortcut for: score.wins = score.wins + 1;
        } else if (result === 'You lose') {
          score.losses += 1;
        } else if (result === 'Tie') {
          score.ties += 1;
        } //end if


        //https://www.w3schools.com/js/js_api_web_storage.asp
        //Save score in local storage, use JSON to convert JS 'score' object to string as local storage does not accept non-string values
        localStorage.setItem('score', JSON.stringify(score));

        //4. Display the result in a pop-up message
        alert(`You picked ${playerMove}. Computer picked ${computerMove}.

${result}

Wins: ${score.wins}
Losses: ${score.losses}
Ties: ${score.ties}`);
      } //end playGame function

      //1. Computer randomly chooses a move
      function pickComputerMove() {
        const randomNumber = Math.random();
        let computerMove = ''; //scope variable

        if (randomNumber >= 0 && randomNumber < 1/3) {
          computerMove = 'Rock';
        } else if (randomNumber >= 1/3 && randomNumber < 2/3) {
          computerMove = 'Paper';
        } else if (randomNumber >= 2/3 && randomNumber < 1) {
          computerMove = 'Scissors';
        }

        return computerMove; //lets us get a value outside the function
      } //end pickComputerMove()
    </script>
    <script>

    </script>
  </body>
</html>
